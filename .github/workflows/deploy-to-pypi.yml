name: Deploy to PyPI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    - name: Merge main into develop and bump version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git checkout develop
        git pull origin develop
        
        # Merge main into develop
        git merge origin/main
        
        # Bump the version
        poetry version patch
        NEW_VERSION=$(poetry version -s)
        
        # Commit the version bump
        git add pyproject.toml poetry.lock
        git commit -m "Bump version to $NEW_VERSION"
        
        # Push changes to develop
        git push origin develop

    - name: Merge develop back into main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git checkout main
        git pull origin main
        
        # Merge develop into main
        git merge develop
        
        # Push changes to main
        git push origin main

    - name: Create new tag and push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create a new tag
        NEW_VERSION=$(poetry version -s)
        git tag $NEW_VERSION
        git push origin $NEW_VERSION

    - name: Publish to PyPI
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry publish --build --username __token__ --password $PYPI_TOKEN
